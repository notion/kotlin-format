buildscript {
    ext.kotlinVersion = '1.0.6'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'kotlin'

repositories {
    jcenter()
}

sourceSets {
    test.java.srcDirs += 'src/test/kotlin'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"

    compile 'com.beust:jcommander:1.48'

    testCompile 'junit:junit:4.12'
    testCompile 'com.nhaarman:mockito-kotlin:1.0.1'
    testCompile 'org.jetbrains.spek:spek-api:1.1.0-beta2'
    testCompile 'org.jetbrains.spek:spek-junit-platform-engine:1.1.0-beta2'
    testCompile 'org.jetbrains.kotlin:kotlin-test:1.0.5-3'
    testCompile 'org.junit.platform:junit-platform-runner:1.0.0-M3'
    testCompile 'org.mockito:mockito-core:2.3.7'
}

jar {
    manifest {
        attributes 'Main-Class': 'format.Main'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task createBin {
    doLast {
        mkdir("$buildDir/bin/")

        def jar = new File("$buildDir/libs", "kotlin-format.jar")
        def bin = new File("$buildDir/bin", "kotlin-format")
        def header = '#!/bin/sh\n\nexec java -Xmx512m -jar "$0" "$@"\n\n'

        bin.delete()
        bin.createNewFile()
        bin.append(header.bytes)
        bin.append(jar.bytes)
        bin.setExecutable(true, false)
    }
}

task install(type: Copy) {
    from("$buildDir/bin/kotlin-format")
    into('/usr/local/bin')
}

build.dependsOn createBin
install.dependsOn build
